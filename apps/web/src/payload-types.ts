/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    posts: Post;
    categories: Category;
    tags: Tag;
    authors: Author;
    programs: Program;
    'add-ons': AddOn;
    'payout-requests': PayoutRequest;
    payouts: Payout;
    purchases: Purchase;
    coupons: Coupon;
    'coupon-usage': CouponUsage;
    'video-testimonials': VideoTestimonial;
    testimonials: Testimonial;
    'faq-categories': FaqCategory;
    faqs: Faq;
    'trading-instruments': TradingInstrument;
    platforms: Platform;
    'newsletter-subscriptions': NewsletterSubscription;
    'contact-messages': ContactMessage;
    courses: Course;
    modules: Module;
    lessons: Lesson;
    search: Search;
    exports: Export;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    tags: TagsSelect<false> | TagsSelect<true>;
    authors: AuthorsSelect<false> | AuthorsSelect<true>;
    programs: ProgramsSelect<false> | ProgramsSelect<true>;
    'add-ons': AddOnsSelect<false> | AddOnsSelect<true>;
    'payout-requests': PayoutRequestsSelect<false> | PayoutRequestsSelect<true>;
    payouts: PayoutsSelect<false> | PayoutsSelect<true>;
    purchases: PurchasesSelect<false> | PurchasesSelect<true>;
    coupons: CouponsSelect<false> | CouponsSelect<true>;
    'coupon-usage': CouponUsageSelect<false> | CouponUsageSelect<true>;
    'video-testimonials': VideoTestimonialsSelect<false> | VideoTestimonialsSelect<true>;
    testimonials: TestimonialsSelect<false> | TestimonialsSelect<true>;
    'faq-categories': FaqCategoriesSelect<false> | FaqCategoriesSelect<true>;
    faqs: FaqsSelect<false> | FaqsSelect<true>;
    'trading-instruments': TradingInstrumentsSelect<false> | TradingInstrumentsSelect<true>;
    platforms: PlatformsSelect<false> | PlatformsSelect<true>;
    'newsletter-subscriptions': NewsletterSubscriptionsSelect<false> | NewsletterSubscriptionsSelect<true>;
    'contact-messages': ContactMessagesSelect<false> | ContactMessagesSelect<true>;
    courses: CoursesSelect<false> | CoursesSelect<true>;
    modules: ModulesSelect<false> | ModulesSelect<true>;
    lessons: LessonsSelect<false> | LessonsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    exports: ExportsSelect<false> | ExportsSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    'global-seo': GlobalSeo;
    homepage: Homepage;
    'how-it-works': HowItWork;
    affiliates: Affiliate;
    'trading-updates': TradingUpdate;
    banners: Banner;
    'program-product-mappings': ProgramProductMapping;
    'commerce-config': CommerceConfig;
    policies: Policy;
    tools: Tool;
    'cookie-consent': CookieConsent;
  };
  globalsSelect: {
    'global-seo': GlobalSeoSelect<false> | GlobalSeoSelect<true>;
    homepage: HomepageSelect<false> | HomepageSelect<true>;
    'how-it-works': HowItWorksSelect<false> | HowItWorksSelect<true>;
    affiliates: AffiliatesSelect<false> | AffiliatesSelect<true>;
    'trading-updates': TradingUpdatesSelect<false> | TradingUpdatesSelect<true>;
    banners: BannersSelect<false> | BannersSelect<true>;
    'program-product-mappings': ProgramProductMappingsSelect<false> | ProgramProductMappingsSelect<true>;
    'commerce-config': CommerceConfigSelect<false> | CommerceConfigSelect<true>;
    policies: PoliciesSelect<false> | PoliciesSelect<true>;
    tools: ToolsSelect<false> | ToolsSelect<true>;
    'cookie-consent': CookieConsentSelect<false> | CookieConsentSelect<true>;
  };
  locale: 'en' | 'tr' | 'de' | 'ar' | 'ms' | 'es';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      createCollectionExport: TaskCreateCollectionExport;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  firstName: string;
  lastName: string;
  /**
   * Auto-generated from first and last name
   */
  name?: string | null;
  role: 'admin' | 'editor' | 'author';
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  /**
   * Brief summary of the post (used in previews and meta descriptions)
   */
  excerpt: string;
  /**
   * URL-friendly version of the title
   */
  slug: string;
  status: 'draft' | 'published' | 'archived';
  publishedAt?: string | null;
  content: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  featuredImage: number | Media;
  /**
   * Estimated reading time (e.g., '5 min read')
   */
  readTime?: string | null;
  author: number | Author;
  category: number | Category;
  tags?: (number | Tag)[] | null;
  postMeta?: {
    /**
     * Mark as featured post
     */
    featured?: boolean | null;
  };
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
      /**
     * Organization JSON-LD schema for this post (application/ld+json). Overrides global setting.
     */
    organizationSchema: string;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "authors".
 */
export interface Author {
  id: number;
  name: string;
  bio?: string | null;
  avatar?: (number | null) | Media;
  email?: string | null;
  website?: string | null;
  social?: {
    /**
     * Twitter/X profile URL
     */
    twitter?: string | null;
    /**
     * LinkedIn profile URL
     */
    linkedin?: string | null;
    /**
     * GitHub profile URL
     */
    github?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  name: string;
  description?: string | null;
  /**
   * URL-friendly version of the category name
   */
  slug: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags".
 */
export interface Tag {
  id: number;
  name: string;
  /**
   * URL-friendly version of the tag name
   */
  slug: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "programs".
 */
export interface Program {
  id: number;
  name: string;
  mobileName: string;
  slug: string;
  category: '1-step' | '2-step' | 'instant';
  description: string;
  subtitle?: string | null;
  isActive?: boolean | null;
  isPopular?: boolean | null;
  isNewProgram?: boolean | null;
  order?: number | null;
  hasResetFee?: boolean | null;
  hasActivationFeeValue?: boolean | null;
  activationFeeValue?: number | null;
  pricingTiers?:
    | {
        accountSize: string;
        price: number;
        resetFee?: number | null;
        resetFeeFunded?: number | null;
        isPopular?: boolean | null;
        id?: string | null;
      }[]
    | null;
  benefits?:
    | {
        benefit: string;
        id?: string | null;
      }[]
    | null;
  features?:
    | {
        label: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  consistencySection?:
    | {
        label: string;
        value: string;
        badge?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Link to the FAQ page
   */
  faqLink?: string | null;
  profitTarget?: {
    /**
     * Profit target percentage (e.g., 10 for 10%)
     */
    percent?: number | null;
    /**
     * How to display in comparison table (e.g., '10%')
     */
    label?: string | null;
  };
  /**
   * Second profit target (mainly for 2-Step programs)
   */
  secondProfitTarget?: {
    /**
     * Second profit target percentage (e.g., 5 for 5%)
     */
    percent?: number | null;
    /**
     * How to display in comparison table (e.g., '5%')
     */
    label?: string | null;
  };
  dailyDrawdown?: {
    /**
     * Daily drawdown percentage (e.g., 4 for 4%)
     */
    percent?: number | null;
    type?: ('Balance Based' | 'Trailing' | 'Trailing Lock' | 'None') | null;
    /**
     * How to display in comparison table (e.g., '4%')
     */
    label?: string | null;
  };
  overallDrawdown?: {
    /**
     * Overall drawdown percentage (e.g., 6 for 6%)
     */
    percent?: number | null;
    type?: ('Balance Based' | 'Trailing' | 'Trailing Lock' | 'None') | null;
    /**
     * How to display in comparison table (e.g., '6%')
     */
    label?: string | null;
  };
  consistencyScore?: {
    /**
     * Consistency score during evaluation (e.g., '50%')
     */
    evaluation?: string | null;
    /**
     * Consistency score during simulated funded (e.g., '45%')
     */
    simFunded?: string | null;
  };
  minTradingDays?: {
    /**
     * Minimum trading days during evaluation (e.g., 'None', '5')
     */
    evaluation?: string | null;
    /**
     * Minimum trading days during simulated funded (e.g., '5')
     */
    simFunded?: string | null;
  };
  /**
   * Profit split percentage
   */
  profitSplit?: string | null;
  /**
   * One-time activation fee (if applicable)
   */
  activationFee?: number | null;
  countryRestrictions?: {
    /**
     * Enable this to restrict this program from certain countries
     */
    hasRestrictions?: boolean | null;
    /**
     * Select countries where this program should NOT be available
     */
    restrictedCountries?:
      | (
          | 'ad'
          | 'ae'
          | 'af'
          | 'ag'
          | 'ai'
          | 'al'
          | 'am'
          | 'ao'
          | 'aq'
          | 'ar'
          | 'as'
          | 'at'
          | 'au'
          | 'aw'
          | 'ax'
          | 'az'
          | 'ba'
          | 'bb'
          | 'bd'
          | 'be'
          | 'bf'
          | 'bg'
          | 'bh'
          | 'bi'
          | 'bj'
          | 'bl'
          | 'bm'
          | 'bn'
          | 'bo'
          | 'bq'
          | 'br'
          | 'bs'
          | 'bt'
          | 'bv'
          | 'bw'
          | 'by'
          | 'bz'
          | 'ca'
          | 'cc'
          | 'cd'
          | 'cf'
          | 'cg'
          | 'ch'
          | 'ci'
          | 'ck'
          | 'cl'
          | 'cm'
          | 'cn'
          | 'co'
          | 'cr'
          | 'cu'
          | 'cv'
          | 'cw'
          | 'cx'
          | 'cy'
          | 'cz'
          | 'de'
          | 'dj'
          | 'dk'
          | 'dm'
          | 'do'
          | 'dz'
          | 'ec'
          | 'ee'
          | 'eg'
          | 'eh'
          | 'er'
          | 'es'
          | 'et'
          | 'fi'
          | 'fj'
          | 'fk'
          | 'fm'
          | 'fo'
          | 'fr'
          | 'ga'
          | 'gb'
          | 'gd'
          | 'ge'
          | 'gf'
          | 'gg'
          | 'gh'
          | 'gi'
          | 'gl'
          | 'gm'
          | 'gn'
          | 'gp'
          | 'gq'
          | 'gr'
          | 'gs'
          | 'gt'
          | 'gu'
          | 'gw'
          | 'gy'
          | 'hk'
          | 'hm'
          | 'hn'
          | 'hr'
          | 'ht'
          | 'hu'
          | 'id'
          | 'ie'
          | 'il'
          | 'im'
          | 'in'
          | 'io'
          | 'iq'
          | 'ir'
          | 'is'
          | 'it'
          | 'je'
          | 'jm'
          | 'jo'
          | 'jp'
          | 'ke'
          | 'kg'
          | 'kh'
          | 'ki'
          | 'km'
          | 'kn'
          | 'kp'
          | 'kr'
          | 'kw'
          | 'ky'
          | 'kz'
          | 'la'
          | 'lb'
          | 'lc'
          | 'li'
          | 'lk'
          | 'lr'
          | 'ls'
          | 'lt'
          | 'lu'
          | 'lv'
          | 'ly'
          | 'ma'
          | 'mc'
          | 'md'
          | 'me'
          | 'mf'
          | 'mg'
          | 'mh'
          | 'mk'
          | 'ml'
          | 'mm'
          | 'mn'
          | 'mo'
          | 'mp'
          | 'mq'
          | 'mr'
          | 'ms'
          | 'mt'
          | 'mu'
          | 'mv'
          | 'mw'
          | 'mx'
          | 'my'
          | 'mz'
          | 'na'
          | 'nc'
          | 'ne'
          | 'nf'
          | 'ng'
          | 'ni'
          | 'nl'
          | 'no'
          | 'np'
          | 'nr'
          | 'nu'
          | 'nz'
          | 'om'
          | 'pa'
          | 'pe'
          | 'pf'
          | 'pg'
          | 'ph'
          | 'pk'
          | 'pl'
          | 'pm'
          | 'pn'
          | 'pr'
          | 'ps'
          | 'pt'
          | 'pw'
          | 'py'
          | 'qa'
          | 're'
          | 'ro'
          | 'rs'
          | 'ru'
          | 'rw'
          | 'sa'
          | 'sb'
          | 'sc'
          | 'sd'
          | 'se'
          | 'sg'
          | 'sh'
          | 'si'
          | 'sj'
          | 'sk'
          | 'sl'
          | 'sm'
          | 'sn'
          | 'so'
          | 'sr'
          | 'ss'
          | 'st'
          | 'sv'
          | 'sx'
          | 'sy'
          | 'sz'
          | 'tc'
          | 'td'
          | 'tf'
          | 'tg'
          | 'th'
          | 'tj'
          | 'tk'
          | 'tl'
          | 'tm'
          | 'tn'
          | 'to'
          | 'tr'
          | 'tt'
          | 'tv'
          | 'tw'
          | 'tz'
          | 'ua'
          | 'ug'
          | 'um'
          | 'us'
          | 'uy'
          | 'uz'
          | 'va'
          | 'vc'
          | 've'
          | 'vg'
          | 'vi'
          | 'vn'
          | 'vu'
          | 'wf'
          | 'ws'
          | 'xk'
          | 'ye'
          | 'yt'
          | 'za'
          | 'zm'
          | 'zw'
        )[]
      | null;
    /**
     * Choose whether to block selected countries or only allow selected countries
     */
    restrictionType?: ('blacklist' | 'whitelist') | null;
    /**
     * Optional message to display when program is restricted (e.g., 'This program is not available in your country due to regulatory requirements')
     */
    restrictionMessage?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "add-ons".
 */
export interface AddOn {
  id: number;
  name: string;
  /**
   * Unique identifier used in API payloads (e.g., 'higher-profit-split').
   */
  key: string;
  /**
   * Optional description shown in checkout.
   */
  description?: string | null;
  status?: ('active' | 'inactive') | null;
  /**
   * Percentage added to the program price when this add-on is selected (e.g., 15).
   */
  priceIncreasePercentage: number;
  /**
   * Only the selected programs will be able to attach this add-on during checkout.
   */
  applicablePrograms?: (number | Program)[] | null;
  /**
   * Lower numbers appear first when listed in checkout.
   */
  order?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payout-requests".
 */
export interface PayoutRequest {
  id: number;
  affiliateId: number;
  affiliateUsername: string;
  affiliateEmail: string;
  /**
   * Requested payout amount
   */
  amount: number;
  paymentMethod: 'crypto_usdt_trc20' | 'crypto_usdt_erc20' | 'rise';
  /**
   * Email for Rise payments
   */
  paymentEmail?: string | null;
  /**
   * Wallet address for crypto payments
   */
  walletAddress?: string | null;
  /**
   * Additional notes from the affiliate
   */
  notes?: string | null;
  status: 'pending' | 'approved' | 'paid' | 'rejected';
  /**
   * Internal notes for admins
   */
  adminNotes?: string | null;
  /**
   * Date when the payout was processed
   */
  processedAt?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payouts".
 */
export interface Payout {
  id: number;
  name: string;
  email?: string | null;
  country: string;
  amount: number;
  /**
   * e.g., '6 hours', '24 hours'
   */
  processingTime?: string | null;
  approvedDate?: string | null;
  /**
   * External link to the transaction or block explorer
   */
  transactionLink?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Purchases are created automatically through the application. Manual creation is disabled.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "purchases".
 */
export interface Purchase {
  id: number;
  purchaseType?: ('original-order' | 'reset-order' | 'activation-order') | null;
  /**
   * Auto-generated incremental order number starting from 100000
   */
  orderNumber: number;
  hasAddOn?: boolean | null;
  addOn?: (number | null) | AddOn;
  /**
   * Calculated add-on price at checkout
   */
  addOnValue?: number | null;
  /**
   * Price excluding add-ons
   */
  purchasePrice?: number | null;
  /**
   * Final price including add-ons
   */
  totalPrice?: number | null;
  /**
   * Coupon or discount code applied at checkout
   */
  discountCode?: string | null;
  billingAddress?: {
    address?: string | null;
    postalCode?: string | null;
    city?: string | null;
    state?: string | null;
    country?: string | null;
  };
  /**
   * Snapshot of the selection (e.g. $5K - Nitro - P1 - MetaTrader 5)
   */
  programDetails?: string | null;
  platform?: (number | null) | Platform;
  /**
   * Human-readable platform name captured during checkout
   */
  platformName?: string | null;
  /**
   * Internal platform identifier / slug
   */
  platformSlug?: string | null;
  programName?: string | null;
  programType?: ('1-step' | '2-step' | 'instant') | null;
  region?:
    | (
        | 'africa'
        | 'asia'
        | 'europe'
        | 'latin-america'
        | 'middle-east'
        | 'north-america'
        | 'oceania'
        | 'south-asia'
        | 'other'
      )
    | null;
  /**
   * Full name of the customer
   */
  customerName: string;
  /**
   * Email address of the customer
   */
  customerEmail: string;
  isInAppPurchase?: boolean | null;
  /**
   * The program that was purchased
   */
  program: number | Program;
  /**
   * The account size tier purchased (e.g., '$10K', '$25K')
   */
  accountSize: string;
  currency: 'USD' | 'EUR' | 'GBP';
  status: 'pending' | 'completed' | 'failed' | 'refunded';
  paymentMethod?: string | null;
  /**
   * External payment processor transaction ID
   */
  transactionId?: string | null;
  /**
   * Internal notes about this purchase
   */
  notes?: string | null;
  /**
   * Additional data from payment processor, AffiliateWP tracking
   */
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Add-ons chosen during checkout
   */
  selectedAddOns?:
    | {
        addOn: number | AddOn;
        priceIncreasePercentage?: number | null;
        metadata?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Affiliate email
   */
  affiliateEmail?: string | null;
  /**
   * Affiliate ID
   */
  affiliateId?: string | null;
  /**
   * AffiliateWP username for affiliate tracking
   */
  affiliateUsername?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "platforms".
 */
export interface Platform {
  id: number;
  /**
   * Human-friendly platform name (e.g., 'MetaTrader 5').
   */
  name: string;
  /**
   * Stable platform identifier and URL slug (e.g., 'metatrader-5', 'ctrader').
   */
  slug: string;
  /**
   * Optional platform logo (upload to Media).
   */
  logo?: (number | null) | Media;
  /**
   * Short description of the platform.
   */
  description?: string | null;
  /**
   * Sort order of the platform.
   */
  sortOrder?: number | null;
  /**
   * Countries where this platform is restricted (ISO 3166-1 alpha-2 codes, e.g., 'us', 'tr').
   */
  restrictedCountries?:
    | {
        /**
         * 2-letter lowercase country code (e.g., 'us', 'tr').
         */
        code: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "coupons".
 */
export interface Coupon {
  id: number;
  /**
   * Unique coupon code (e.g., SUMMER2025, WELCOME10)
   */
  code: string;
  /**
   * Internal name for admin reference (e.g., Summer 2025 Campaign)
   */
  name: string;
  /**
   * Internal notes about this coupon
   */
  description?: string | null;
  /**
   * Current status of the coupon
   */
  status: 'active' | 'inactive' | 'scheduled' | 'expired';
  /**
   * Type of discount to apply
   */
  discountType: 'percentage' | 'fixed';
  /**
   * Base discount amount (percentage or dollar amount)
   */
  discountValue: number;
  /**
   * Override discount values for specific account sizes
   */
  accountSizeDiscounts?:
    | {
        accountSize: '5K' | '10K' | '25K' | '50K' | '100K' | '200K';
        /**
         * Override discount for this account size
         */
        discountValue: number;
        id?: string | null;
      }[]
    | null;
  /**
   * How to apply program restrictions
   */
  restrictionType: 'all' | 'whitelist' | 'blacklist';
  /**
   * Programs this coupon can be used with
   */
  applicablePrograms?: (number | Program)[] | null;
  /**
   * Programs this coupon cannot be used with
   */
  excludedPrograms?: (number | Program)[] | null;
  /**
   * When this coupon becomes active
   */
  validFrom: string;
  /**
   * When this coupon expires (leave empty for never-expiring coupons)
   */
  validTo?: string | null;
  /**
   * Maximum number of times this coupon can be used (0 = unlimited)
   */
  totalUsageLimit?: number | null;
  /**
   * Maximum number of times one user can use this coupon (0 = unlimited)
   */
  usagePerUser?: number | null;
  /**
   * Automatically apply this coupon when conditions are met
   */
  autoApply?: boolean | null;
  /**
   * Priority when multiple auto-apply coupons match (higher = higher priority)
   */
  autoApplyPriority?: number | null;
  /**
   * Message to show when coupon is auto-applied (e.g., 'Special discount applied!')
   */
  autoApplyMessage?: string | null;
  /**
   * Prevent users from manually entering this coupon code (auto-apply only)
   */
  preventManualEntry?: boolean | null;
  /**
   * Affiliate ID
   */
  affiliateId?: string | null;
  /**
   * Affiliate email
   */
  affiliateEmail?: string | null;
  /**
   * AffiliateWP username for coupon-based affiliate tracking
   */
  affiliateUsername?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Track all coupon redemptions and usage analytics
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "coupon-usage".
 */
export interface CouponUsage {
  id: number;
  /**
   * The coupon that was used
   */
  coupon: number | Coupon;
  /**
   * Email of the customer if no user record exists
   */
  customerEmail?: string | null;
  /**
   * The program the coupon was applied to
   */
  program: number | Program;
  /**
   * The account size tier (e.g., '$10K', '$25K')
   */
  accountSize: string;
  /**
   * The original price before discount
   */
  originalPrice: number;
  /**
   * The amount of discount applied
   */
  discountAmount: number;
  /**
   * The final price after discount
   */
  finalPrice: number;
  /**
   * Type of discount that was applied
   */
  discountType: 'percentage' | 'fixed';
  /**
   * The discount value that was used (percentage or fixed amount)
   */
  discountValue: number;
  /**
   * When the coupon was used
   */
  usedAt: string;
  /**
   * Reference to the order/payment ID
   */
  orderReference?: string | null;
  /**
   * Payment method used for this purchase
   */
  paymentMethod?: ('credit_card' | 'paypal' | 'bank_transfer' | 'crypto') | null;
  /**
   * Currency used for the transaction
   */
  currency: 'USD' | 'EUR' | 'GBP';
  /**
   * Browser/device information
   */
  userAgent?: string | null;
  /**
   * User's IP address when coupon was used
   */
  ipAddress?: string | null;
  /**
   * Additional data related to the coupon usage
   */
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "video-testimonials".
 */
export interface VideoTestimonial {
  id: number;
  /**
   * Trader's name
   */
  name: string;
  /**
   * Country code (e.g., 'mx', 'ca', 'in')
   */
  country: string;
  /**
   * Payout amount (e.g., '$35,393')
   */
  price: string;
  /**
   * YouTube video URL
   */
  videoUrl: string;
  /**
   * Custom thumbnail image URL
   */
  thumbnail: string;
  /**
   * Testimonial text/review
   */
  review: string;
  /**
   * Whether this testimonial should be displayed on the website
   */
  isActive?: boolean | null;
  /**
   * Display order (lower numbers appear first)
   */
  order?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials".
 */
export interface Testimonial {
  id: number;
  /**
   * Testimonial text content
   */
  text: string;
  /**
   * Author's name
   */
  author: string;
  /**
   * Author's initials for avatar (e.g., 'UB', 'AK')
   */
  avatar: string;
  /**
   * Which column this testimonial should appear in for desktop layout
   */
  column: 'column1' | 'column2' | 'column3';
  /**
   * Whether this testimonial should be displayed on the website
   */
  isActive?: boolean | null;
  /**
   * Display order within the column (lower numbers appear first)
   */
  order?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faq-categories".
 */
export interface FaqCategory {
  id: number;
  /**
   * Name of the FAQ category
   */
  name: string;
  /**
   * Brief description of what this category covers
   */
  description?: string | null;
  /**
   * URL-friendly version of the category name
   */
  slug: string;
  /**
   * Order in which this category should appear (lower numbers first)
   */
  displayOrder?: number | null;
  /**
   * Whether this category is active and visible
   */
  isActive?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqs".
 */
export interface Faq {
  id: number;
  /**
   * The FAQ question
   */
  question: string;
  /**
   * The detailed answer to the question
   */
  answer: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * URL-friendly version of the question
   */
  slug: string;
  /**
   * The category this FAQ belongs to
   */
  category: number | FaqCategory;
  /**
   * Order in which this FAQ should appear within its category (lower numbers first)
   */
  displayOrder?: number | null;
  /**
   * Whether this FAQ is active and visible
   */
  isActive?: boolean | null;
  /**
   * Mark as featured FAQ (will appear at the top of listings)
   */
  isFeatured?: boolean | null;
  /**
   * SEO meta title (will use question if empty)
   */
  metaTitle?: string | null;
  /**
   * SEO meta description
   */
  metaDescription?: string | null;
  /**
   * Tags for better searchability
   */
  tags?:
    | {
        tag: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "trading-instruments".
 */
export interface TradingInstrument {
  id: number;
  /**
   * Trading symbol (e.g., EURUSD, BTCUSD)
   */
  symbol: string;
  /**
   * Full description of the instrument
   */
  description: string;
  /**
   * Market category for the instrument
   */
  market: 'forex' | 'metals' | 'indices' | 'crypto' | 'commodities';
  /**
   * Whether this instrument is currently available for trading
   */
  isActive?: boolean | null;
  /**
   * Number of decimal places for price quotes
   */
  digits: number;
  /**
   * Contract size (e.g., 100,000, 1, 5,000)
   */
  contractSize: string;
  /**
   * Contract size as numeric value for calculations
   */
  contractSizeNumeric: number;
  /**
   * Swap rate (e.g., 0%, -2.5%)
   */
  swap: string;
  /**
   * Commission fee (e.g., $7, $0)
   */
  commission: string;
  /**
   * Commission as numeric value for calculations
   */
  commissionNumeric: number;
  /**
   * Minimum trade size (lots)
   */
  minTradeSize?: number | null;
  /**
   * Maximum trade size (lots)
   */
  maxTradeSize?: number | null;
  /**
   * Trading hours information
   */
  tradingHours?: string | null;
  /**
   * Additional notes or special conditions
   */
  notes?: string | null;
  /**
   * Order for displaying instruments (lower numbers appear first)
   */
  displayOrder?: number | null;
  /**
   * Mark as featured instrument
   */
  isFeatured?: boolean | null;
  /**
   * Mark as popular instrument
   */
  isPopular?: boolean | null;
  /**
   * Custom CSS class for styling
   */
  customCssClass?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsletter-subscriptions".
 */
export interface NewsletterSubscription {
  id: number;
  email: string;
  status: 'subscribed' | 'unsubscribed';
  /**
   * Where the subscription originated from
   */
  source?: string | null;
  /**
   * IP address of the subscriber
   */
  ipAddress?: string | null;
  /**
   * User agent of the subscriber
   */
  userAgent?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-messages".
 */
export interface ContactMessage {
  id: number;
  name: string;
  phone?: string | null;
  email: string;
  message: string;
  /**
   * Current status of the contact message
   */
  status: 'unread' | 'read' | 'responded' | 'archived';
  /**
   * IP address of the sender
   */
  ipAddress?: string | null;
  /**
   * User agent of the sender
   */
  userAgent?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "courses".
 */
export interface Course {
  id: number;
  title: string;
  /**
   * URL-friendly version of the title
   */
  slug: string;
  /**
   * Brief summary of the course (used in previews)
   */
  shortDescription: string;
  level: 'beginner' | 'intermediate' | 'advanced';
  /**
   * Mark this course as featured
   */
  isFeatured?: boolean | null;
  /**
   * Order in which this course appears in listings
   */
  order?: number | null;
  status: 'draft' | 'published' | 'archived';
  description: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Key features or highlights of this course
   */
  features?:
    | {
        feature: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Main cover image for the course
   */
  coverImage: number | Media;
  /**
   * Featured image used in course listings
   */
  featuredImage: number | Media;
  seo?: {
    /**
     * SEO title (leave empty to use course title)
     */
    title?: string | null;
    /**
     * SEO meta description (leave empty to use short description)
     */
    description?: string | null;
    /**
     * SEO meta image (leave empty to use featured image)
     */
    image?: (number | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "modules".
 */
export interface Module {
  id: number;
  title: string;
  /**
   * Optional prefix (e.g., 'Module 1:', 'Week 1:')
   */
  titlePrefix?: string | null;
  /**
   * The course this module belongs to
   */
  course: number | Course;
  /**
   * Order in which this module appears within its course
   */
  order?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "lessons".
 */
export interface Lesson {
  id: number;
  title: string;
  /**
   * URL-friendly version of the title
   */
  slug: string;
  /**
   * The module this lesson belongs to
   */
  module: number | Module;
  /**
   * Lesson duration in minutes
   */
  duration?: number | null;
  /**
   * Order in which this lesson appears within its course
   */
  order?: number | null;
  status: 'draft' | 'published' | 'archived';
  content: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * Optional cover image for this lesson
   */
  coverImage?: (number | null) | Media;
  seo?: {
    /**
     * SEO title (leave empty to use lesson title)
     */
    title?: string | null;
    /**
     * SEO meta description
     */
    description?: string | null;
    /**
     * SEO meta image (leave empty to use cover image)
     */
    image?: (number | null) | Media;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: number | Post;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "exports".
 */
export interface Export {
  id: number;
  name?: string | null;
  format?: ('csv' | 'json') | null;
  limit?: number | null;
  page?: number | null;
  sort?: string | null;
  sortOrder?: ('asc' | 'desc') | null;
  locale?: ('all' | 'en' | 'tr' | 'de' | 'ar' | 'ms' | 'es') | null;
  drafts?: ('yes' | 'no') | null;
  selectionToUse?: ('currentSelection' | 'currentFilters' | 'all') | null;
  fields?: string[] | null;
  collectionSlug: string;
  where?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'createCollectionExport';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'createCollectionExport') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'tags';
        value: number | Tag;
      } | null)
    | ({
        relationTo: 'authors';
        value: number | Author;
      } | null)
    | ({
        relationTo: 'programs';
        value: number | Program;
      } | null)
    | ({
        relationTo: 'add-ons';
        value: number | AddOn;
      } | null)
    | ({
        relationTo: 'payout-requests';
        value: number | PayoutRequest;
      } | null)
    | ({
        relationTo: 'payouts';
        value: number | Payout;
      } | null)
    | ({
        relationTo: 'purchases';
        value: number | Purchase;
      } | null)
    | ({
        relationTo: 'coupons';
        value: number | Coupon;
      } | null)
    | ({
        relationTo: 'coupon-usage';
        value: number | CouponUsage;
      } | null)
    | ({
        relationTo: 'video-testimonials';
        value: number | VideoTestimonial;
      } | null)
    | ({
        relationTo: 'testimonials';
        value: number | Testimonial;
      } | null)
    | ({
        relationTo: 'faq-categories';
        value: number | FaqCategory;
      } | null)
    | ({
        relationTo: 'faqs';
        value: number | Faq;
      } | null)
    | ({
        relationTo: 'trading-instruments';
        value: number | TradingInstrument;
      } | null)
    | ({
        relationTo: 'platforms';
        value: number | Platform;
      } | null)
    | ({
        relationTo: 'newsletter-subscriptions';
        value: number | NewsletterSubscription;
      } | null)
    | ({
        relationTo: 'contact-messages';
        value: number | ContactMessage;
      } | null)
    | ({
        relationTo: 'courses';
        value: number | Course;
      } | null)
    | ({
        relationTo: 'modules';
        value: number | Module;
      } | null)
    | ({
        relationTo: 'lessons';
        value: number | Lesson;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null)
    | ({
        relationTo: 'exports';
        value: number | Export;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  name?: T;
  role?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        tablet?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  excerpt?: T;
  slug?: T;
  status?: T;
  publishedAt?: T;
  content?: T;
  featuredImage?: T;
  readTime?: T;
  author?: T;
  category?: T;
  tags?: T;
  postMeta?:
    | T
    | {
        featured?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags_select".
 */
export interface TagsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "authors_select".
 */
export interface AuthorsSelect<T extends boolean = true> {
  name?: T;
  bio?: T;
  avatar?: T;
  email?: T;
  website?: T;
  social?:
    | T
    | {
        twitter?: T;
        linkedin?: T;
        github?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "programs_select".
 */
export interface ProgramsSelect<T extends boolean = true> {
  name?: T;
  mobileName?: T;
  slug?: T;
  category?: T;
  description?: T;
  subtitle?: T;
  isActive?: T;
  isPopular?: T;
  isNewProgram?: T;
  order?: T;
  hasResetFee?: T;
  hasActivationFeeValue?: T;
  activationFeeValue?: T;
  pricingTiers?:
    | T
    | {
        accountSize?: T;
        price?: T;
        resetFee?: T;
        resetFeeFunded?: T;
        isPopular?: T;
        id?: T;
      };
  benefits?:
    | T
    | {
        benefit?: T;
        id?: T;
      };
  features?:
    | T
    | {
        label?: T;
        value?: T;
        id?: T;
      };
  consistencySection?:
    | T
    | {
        label?: T;
        value?: T;
        badge?: T;
        id?: T;
      };
  faqLink?: T;
  profitTarget?:
    | T
    | {
        percent?: T;
        label?: T;
      };
  secondProfitTarget?:
    | T
    | {
        percent?: T;
        label?: T;
      };
  dailyDrawdown?:
    | T
    | {
        percent?: T;
        type?: T;
        label?: T;
      };
  overallDrawdown?:
    | T
    | {
        percent?: T;
        type?: T;
        label?: T;
      };
  consistencyScore?:
    | T
    | {
        evaluation?: T;
        simFunded?: T;
      };
  minTradingDays?:
    | T
    | {
        evaluation?: T;
        simFunded?: T;
      };
  profitSplit?: T;
  activationFee?: T;
  countryRestrictions?:
    | T
    | {
        hasRestrictions?: T;
        restrictedCountries?: T;
        restrictionType?: T;
        restrictionMessage?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "add-ons_select".
 */
export interface AddOnsSelect<T extends boolean = true> {
  name?: T;
  key?: T;
  description?: T;
  status?: T;
  priceIncreasePercentage?: T;
  applicablePrograms?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payout-requests_select".
 */
export interface PayoutRequestsSelect<T extends boolean = true> {
  affiliateId?: T;
  affiliateUsername?: T;
  affiliateEmail?: T;
  amount?: T;
  paymentMethod?: T;
  paymentEmail?: T;
  walletAddress?: T;
  notes?: T;
  status?: T;
  adminNotes?: T;
  processedAt?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payouts_select".
 */
export interface PayoutsSelect<T extends boolean = true> {
  name?: T;
  email?: T;
  country?: T;
  amount?: T;
  processingTime?: T;
  approvedDate?: T;
  transactionLink?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "purchases_select".
 */
export interface PurchasesSelect<T extends boolean = true> {
  purchaseType?: T;
  orderNumber?: T;
  hasAddOn?: T;
  addOn?: T;
  addOnValue?: T;
  purchasePrice?: T;
  totalPrice?: T;
  discountCode?: T;
  billingAddress?:
    | T
    | {
        address?: T;
        postalCode?: T;
        city?: T;
        state?: T;
        country?: T;
      };
  programDetails?: T;
  platform?: T;
  platformName?: T;
  platformSlug?: T;
  programName?: T;
  programType?: T;
  region?: T;
  customerName?: T;
  customerEmail?: T;
  isInAppPurchase?: T;
  program?: T;
  accountSize?: T;
  currency?: T;
  status?: T;
  paymentMethod?: T;
  transactionId?: T;
  notes?: T;
  metadata?: T;
  selectedAddOns?:
    | T
    | {
        addOn?: T;
        priceIncreasePercentage?: T;
        metadata?: T;
        id?: T;
      };
  affiliateEmail?: T;
  affiliateId?: T;
  affiliateUsername?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "coupons_select".
 */
export interface CouponsSelect<T extends boolean = true> {
  code?: T;
  name?: T;
  description?: T;
  status?: T;
  discountType?: T;
  discountValue?: T;
  accountSizeDiscounts?:
    | T
    | {
        accountSize?: T;
        discountValue?: T;
        id?: T;
      };
  restrictionType?: T;
  applicablePrograms?: T;
  excludedPrograms?: T;
  validFrom?: T;
  validTo?: T;
  totalUsageLimit?: T;
  usagePerUser?: T;
  autoApply?: T;
  autoApplyPriority?: T;
  autoApplyMessage?: T;
  preventManualEntry?: T;
  affiliateId?: T;
  affiliateEmail?: T;
  affiliateUsername?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "coupon-usage_select".
 */
export interface CouponUsageSelect<T extends boolean = true> {
  coupon?: T;
  customerEmail?: T;
  program?: T;
  accountSize?: T;
  originalPrice?: T;
  discountAmount?: T;
  finalPrice?: T;
  discountType?: T;
  discountValue?: T;
  usedAt?: T;
  orderReference?: T;
  paymentMethod?: T;
  currency?: T;
  userAgent?: T;
  ipAddress?: T;
  metadata?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "video-testimonials_select".
 */
export interface VideoTestimonialsSelect<T extends boolean = true> {
  name?: T;
  country?: T;
  price?: T;
  videoUrl?: T;
  thumbnail?: T;
  review?: T;
  isActive?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials_select".
 */
export interface TestimonialsSelect<T extends boolean = true> {
  text?: T;
  author?: T;
  avatar?: T;
  column?: T;
  isActive?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faq-categories_select".
 */
export interface FaqCategoriesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  slug?: T;
  displayOrder?: T;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqs_select".
 */
export interface FaqsSelect<T extends boolean = true> {
  question?: T;
  answer?: T;
  slug?: T;
  category?: T;
  displayOrder?: T;
  isActive?: T;
  isFeatured?: T;
  metaTitle?: T;
  metaDescription?: T;
  tags?:
    | T
    | {
        tag?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "trading-instruments_select".
 */
export interface TradingInstrumentsSelect<T extends boolean = true> {
  symbol?: T;
  description?: T;
  market?: T;
  isActive?: T;
  digits?: T;
  contractSize?: T;
  contractSizeNumeric?: T;
  swap?: T;
  commission?: T;
  commissionNumeric?: T;
  minTradeSize?: T;
  maxTradeSize?: T;
  tradingHours?: T;
  notes?: T;
  displayOrder?: T;
  isFeatured?: T;
  isPopular?: T;
  customCssClass?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "platforms_select".
 */
export interface PlatformsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  logo?: T;
  description?: T;
  sortOrder?: T;
  restrictedCountries?:
    | T
    | {
        code?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "newsletter-subscriptions_select".
 */
export interface NewsletterSubscriptionsSelect<T extends boolean = true> {
  email?: T;
  status?: T;
  source?: T;
  ipAddress?: T;
  userAgent?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-messages_select".
 */
export interface ContactMessagesSelect<T extends boolean = true> {
  name?: T;
  phone?: T;
  email?: T;
  message?: T;
  status?: T;
  ipAddress?: T;
  userAgent?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "courses_select".
 */
export interface CoursesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  shortDescription?: T;
  level?: T;
  isFeatured?: T;
  order?: T;
  status?: T;
  description?: T;
  features?:
    | T
    | {
        feature?: T;
        id?: T;
      };
  coverImage?: T;
  featuredImage?: T;
  seo?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "modules_select".
 */
export interface ModulesSelect<T extends boolean = true> {
  title?: T;
  titlePrefix?: T;
  course?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "lessons_select".
 */
export interface LessonsSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  module?: T;
  duration?: T;
  order?: T;
  status?: T;
  content?: T;
  coverImage?: T;
  seo?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "exports_select".
 */
export interface ExportsSelect<T extends boolean = true> {
  name?: T;
  format?: T;
  limit?: T;
  page?: T;
  sort?: T;
  sortOrder?: T;
  locale?: T;
  drafts?: T;
  selectionToUse?: T;
  fields?: T;
  collectionSlug?: T;
  where?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "global-seo".
 */
export interface GlobalSeo {
  id: number;
  defaults: {
    /**
     * Your site name (e.g., 'Funded Trader Markets')
     */
    siteName: string;
    /**
     * Template for page titles. Use %s as placeholder for page title
     */
    titleTemplate: string;
    /**
     * Default meta description (150-160 characters recommended)
     */
    description: string;
    /**
     * Default SEO keywords (comma-separated)
     */
    keywords?: string | null;
    /**
     * Default Open Graph image for social sharing (recommended: 1200x630px)
     */
    ogImage?: (number | null) | Media;
    /**
     * Twitter handle (e.g., '@ftmarkets')
     */
    twitterHandle?: string | null;
    /**
     * Base URL for canonical links (e.g., 'https://fundedtradermarkets.com')
     */
    canonicalBaseUrl?: string | null;
    defaultRobots?: {
      /**
       * Allow search engines to index pages
       */
      index?: boolean | null;
      /**
       * Allow search engines to follow links
       */
      follow?: boolean | null;
    };
    /**
     * Global organization JSON-LD schema (application/ld+json). This will be included on all pages. Paste your schema.org Organization JSON here.
     */
    organizationSchema?: string | null;
  };
  homePage?: {
    /**
     * Enable custom SEO for home page
     */
    enabled?: boolean | null;
    /**
     * Home page title (leave empty to use default)
     */
    title?: string | null;
    /**
     * Home page meta description
     */
    description?: string | null;
    /**
     * Home page keywords (comma-separated)
     */
    keywords?: string | null;
    /**
     * Home page OG image
     */
    ogImage?: (number | null) | Media;
    /**
     * Custom canonical URL (leave empty to auto-generate)
     */
    canonicalUrl?: string | null;
    robots?: {
      /**
       * Allow indexing
       */
      index?: boolean | null;
      /**
       * Allow following links
       */
      follow?: boolean | null;
    };
    /**
     * JSON-LD structured data (application/ld+json). Paste your schema.org JSON here.
     */
    jsonLdSchema?: string | null;
  };
  programsPage?: {
    /**
     * Enable custom SEO for programs page
     */
    enabled?: boolean | null;
    /**
     * Programs page title (leave empty to use default)
     */
    title?: string | null;
    /**
     * Programs page meta description
     */
    description?: string | null;
    /**
     * Programs page keywords (comma-separated)
     */
    keywords?: string | null;
    /**
     * Programs page OG image
     */
    ogImage?: (number | null) | Media;
    /**
     * Custom canonical URL (leave empty to auto-generate)
     */
    canonicalUrl?: string | null;
    robots?: {
      /**
       * Allow indexing
       */
      index?: boolean | null;
      /**
       * Allow following links
       */
      follow?: boolean | null;
    };
    /**
     * JSON-LD structured data (application/ld+json). Paste your schema.org JSON here.
     */
    jsonLdSchema?: string | null;
  };
  blogPage?: {
    /**
     * Enable custom SEO for blog page
     */
    enabled?: boolean | null;
    /**
     * Blog page title (leave empty to use default)
     */
    title?: string | null;
    /**
     * Blog page meta description
     */
    description?: string | null;
    /**
     * Blog page keywords (comma-separated)
     */
    keywords?: string | null;
    /**
     * Blog page OG image
     */
    ogImage?: (number | null) | Media;
    /**
     * Custom canonical URL (leave empty to auto-generate)
     */
    canonicalUrl?: string | null;
    robots?: {
      /**
       * Allow indexing
       */
      index?: boolean | null;
      /**
       * Allow following links
       */
      follow?: boolean | null;
    };
    /**
     * JSON-LD structured data (application/ld+json). Paste your schema.org JSON here.
     */
    jsonLdSchema?: string | null;
  };
  faqPage?: {
    /**
     * Enable custom SEO for FAQ page
     */
    enabled?: boolean | null;
    /**
     * FAQ page title (leave empty to use default)
     */
    title?: string | null;
    /**
     * FAQ page meta description
     */
    description?: string | null;
    /**
     * FAQ page keywords (comma-separated)
     */
    keywords?: string | null;
    /**
     * FAQ page OG image
     */
    ogImage?: (number | null) | Media;
    /**
     * Custom canonical URL (leave empty to auto-generate)
     */
    canonicalUrl?: string | null;
    robots?: {
      /**
       * Allow indexing
       */
      index?: boolean | null;
      /**
       * Allow following links
       */
      follow?: boolean | null;
    };
    /**
     * JSON-LD structured data (application/ld+json). Paste your schema.org JSON here.
     */
    jsonLdSchema?: string | null;
  };
  oneStepPage?: {
    /**
     * Enable custom SEO for 1-Step program page
     */
    enabled?: boolean | null;
    /**
     * 1-Step page title (leave empty to use default)
     */
    title?: string | null;
    /**
     * 1-Step page meta description
     */
    description?: string | null;
    /**
     * 1-Step page keywords (comma-separated)
     */
    keywords?: string | null;
    /**
     * 1-Step page OG image
     */
    ogImage?: (number | null) | Media;
    /**
     * Custom canonical URL (leave empty to auto-generate)
     */
    canonicalUrl?: string | null;
    robots?: {
      /**
       * Allow indexing
       */
      index?: boolean | null;
      /**
       * Allow following links
       */
      follow?: boolean | null;
    };
    /**
     * JSON-LD structured data (application/ld+json). Paste your schema.org JSON here.
     */
    jsonLdSchema?: string | null;
  };
  twoStepPage?: {
    /**
     * Enable custom SEO for 2-Step program page
     */
    enabled?: boolean | null;
    /**
     * 2-Step page title (leave empty to use default)
     */
    title?: string | null;
    /**
     * 2-Step page meta description
     */
    description?: string | null;
    /**
     * 2-Step page keywords (comma-separated)
     */
    keywords?: string | null;
    /**
     * 2-Step page OG image
     */
    ogImage?: (number | null) | Media;
    /**
     * Custom canonical URL (leave empty to auto-generate)
     */
    canonicalUrl?: string | null;
    robots?: {
      /**
       * Allow indexing
       */
      index?: boolean | null;
      /**
       * Allow following links
       */
      follow?: boolean | null;
    };
    /**
     * JSON-LD structured data (application/ld+json). Paste your schema.org JSON here.
     */
    jsonLdSchema?: string | null;
  };
  howItWorksPage?: {
    /**
     * Enable custom SEO for How It Works page
     */
    enabled?: boolean | null;
    /**
     * How It Works page title (leave empty to use default)
     */
    title?: string | null;
    /**
     * How It Works page meta description
     */
    description?: string | null;
    /**
     * How It Works page keywords (comma-separated)
     */
    keywords?: string | null;
    /**
     * How It Works page OG image
     */
    ogImage?: (number | null) | Media;
    /**
     * Custom canonical URL (leave empty to auto-generate)
     */
    canonicalUrl?: string | null;
    robots?: {
      /**
       * Allow indexing
       */
      index?: boolean | null;
      /**
       * Allow following links
       */
      follow?: boolean | null;
    };
    /**
     * JSON-LD structured data (application/ld+json). Paste your schema.org JSON here.
     */
    jsonLdSchema?: string | null;
  };
  affiliatesPage?: {
    /**
     * Enable custom SEO for Affiliates page
     */
    enabled?: boolean | null;
    /**
     * Affiliates page title (leave empty to use default)
     */
    title?: string | null;
    /**
     * Affiliates page meta description
     */
    description?: string | null;
    /**
     * Affiliates page keywords (comma-separated)
     */
    keywords?: string | null;
    /**
     * Affiliates page OG image
     */
    ogImage?: (number | null) | Media;
    /**
     * Custom canonical URL (leave empty to auto-generate)
     */
    canonicalUrl?: string | null;
    robots?: {
      /**
       * Allow indexing
       */
      index?: boolean | null;
      /**
       * Allow following links
       */
      follow?: boolean | null;
    };
    /**
     * JSON-LD structured data (application/ld+json). Paste your schema.org JSON here.
     */
    jsonLdSchema?: string | null;
  };
  instantPage?: {
    /**
     * Enable custom SEO for Instant Funding program page
     */
    enabled?: boolean | null;
    /**
     * Instant Funding page title (leave empty to use default)
     */
    title?: string | null;
    /**
     * Instant Funding page meta description
     */
    description?: string | null;
    /**
     * Instant Funding page keywords (comma-separated)
     */
    keywords?: string | null;
    /**
     * Instant Funding page OG image
     */
    ogImage?: (number | null) | Media;
    /**
     * Custom canonical URL (leave empty to auto-generate)
     */
    canonicalUrl?: string | null;
    robots?: {
      /**
       * Allow indexing
       */
      index?: boolean | null;
      /**
       * Allow following links
       */
      follow?: boolean | null;
    };
    /**
     * JSON-LD structured data (application/ld+json). Paste your schema.org JSON here.
     */
    jsonLdSchema?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage".
 */
export interface Homepage {
  id: number;
  hero: {
    /**
     * Small text above the main headline (e.g., 'Get Your Funded Trading Account')
     */
    tagline: string;
    /**
     * Main hero headline (supports line breaks)
     */
    headline: string;
    /**
     * Text that appears with gradient styling (e.g., '24 Hours')
     */
    highlightedText: string;
    /**
     * Second highlighted text (e.g., 'We Pay Double')
     */
    secondaryHighlight: string;
    /**
     * Primary CTA button text
     */
    primaryButtonText: string;
    /**
     * Primary CTA button URL
     */
    primaryButtonUrl: string;
    /**
     * Secondary CTA button text
     */
    secondaryButtonText: string;
    /**
     * Secondary CTA button URL
     */
    secondaryButtonUrl: string;
  };
  /**
   * Four feature boxes displayed below the hero
   */
  features: {
    text: string;
    icon: 'globe' | 'wallet' | 'dollar-badge' | 'hand-coins';
    iconColor: 'blue' | 'yellow' | 'green' | 'rose';
    id?: string | null;
  }[];
  featuredIn: {
    /**
     * Section heading (e.g., 'As Featured In')
     */
    heading: string;
    /**
     * Logo images and links for the featured in section
     */
    logos?:
      | {
          /**
           * Name/Alt text for the logo
           */
          name: string;
          /**
           * Logo image
           */
          logo: number | Media;
          /**
           * Optional link URL when logo is clicked
           */
          url?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  advantages: {
    /**
     * Small text above the main title (e.g., 'The FTM Advantage')
     */
    dividerTitle: string;
    /**
     * Main section title (e.g., 'Why Traders Choose FTM?')
     */
    title: string;
    /**
     * Part of title to highlight with gradient (e.g., 'FTM?')
     */
    titleHighlight: string;
    /**
     * Section description text
     */
    description: string;
    /**
     * Advantage cards to display in grid
     */
    cards: {
      /**
       * Card title
       */
      title: string;
      /**
       * Card description
       */
      description: string;
      icon: 'phone' | 'circle-dollar-sign' | 'hand-coins' | 'ribbon' | 'trophy' | 'zap';
      iconColor: 'blue' | 'yellow' | 'green' | 'rose' | 'purple' | 'orange';
      gradientPosition: 'top-left' | 'top-center' | 'top-right';
      id?: string | null;
    }[];
  };
  payoutsFeatures: {
    /**
     * Small text above the main title (e.g., 'Get Paid Fast')
     */
    dividerTitle: string;
    /**
     * Main section title (supports line breaks, e.g., 'Reliable, On-Time\n Payouts Guaranteed')
     */
    title: string;
    /**
     * Part of title to highlight with gradient (e.g., 'Guaranteed')
     */
    titleHighlight: string;
    /**
     * Section description text
     */
    description: string;
    /**
     * Four payout feature cards displayed in grid layout
     */
    features: {
      /**
       * Feature card title
       */
      title: string;
      /**
       * Feature card description
       */
      description: string;
      /**
       * Card position in the grid layout
       */
      position: 'left-tall' | 'top-right' | 'bottom-middle' | 'right-tall';
      id?: string | null;
    }[];
  };
  highestPayouts: {
    /**
     * Main section title (e.g., 'Milestone Rewards for Trading Champions')
     */
    title: string;
    /**
     * Part of title to highlight with gradient (e.g., 'Trading Champions')
     */
    titleHighlight: string;
    /**
     * Section description text
     */
    description: string;
  };
  tradingFeatures: {
    /**
     * Small text above the main title (e.g., 'Best Prop Trading Solutions')
     */
    dividerTitle: string;
    /**
     * Main section title (supports line breaks, e.g., 'Fast Execution on\nLeading Trading Platforms')
     */
    title: string;
    /**
     * Part of title to highlight with gradient (e.g., 'Leading')
     */
    titleHighlight: string;
    /**
     * Section description text
     */
    description: string;
    /**
     * Four trading feature cards displayed in bento grid layout
     */
    features: {
      /**
       * Feature card title
       */
      title: string;
      /**
       * Feature card description
       */
      description: string;
      /**
       * Card layout position in the bento grid
       */
      layout: 'large-left' | 'top-right' | 'bottom-left' | 'large-bottom-right';
      id?: string | null;
    }[];
  };
  videoTestimonials: {
    /**
     * Small text above the main title (e.g., 'Success Reviews')
     */
    dividerTitle: string;
    /**
     * Main section title (e.g., 'What Our Traders Are Saying')
     */
    title: string;
    /**
     * Part of title to highlight with gradient (e.g., 'Traders')
     */
    titleHighlight: string;
    /**
     * Section description text
     */
    description: string;
  };
  testimonials: {
    /**
     * Main section title (e.g., '100+ Satisfied Traders')
     */
    title: string;
    /**
     * Part of title to highlight with gradient (e.g., 'Satisfied')
     */
    titleHighlight: string;
    /**
     * Section description text
     */
    description: string;
  };
  faq: {
    /**
     * Small text above the main title (e.g., 'Prop Trading FAQs')
     */
    dividerTitle: string;
    /**
     * Main section title (e.g., 'Your Questions, Our Answers')
     */
    title: string;
    /**
     * Part of title to highlight with gradient (e.g., 'Our Answers')
     */
    titleHighlight: string;
    /**
     * Section description text
     */
    description: string;
    /**
     * FAQ questions and answers for the homepage
     */
    faqs: {
      /**
       * FAQ question
       */
      question: string;
      /**
       * FAQ answer (supports line breaks)
       */
      answer: string;
      id?: string | null;
    }[];
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "how-it-works".
 */
export interface HowItWork {
  id: number;
  header: {
    /**
     * Main page title
     */
    title: string;
    /**
     * Part of title to highlight with gradient
     */
    titleHighlight: string;
    /**
     * Subtitle/description below main title
     */
    description: string;
  };
  propTradingSection: {
    /**
     * Section title
     */
    title: string;
    /**
     * Section description
     */
    description: string;
  };
  /**
   * Key trading concepts cards
   */
  keyConcepts: {
    /**
     * Concept title
     */
    title: string;
    /**
     * Concept description
     */
    description: string;
    /**
     * Optional additional details/bullet points
     */
    details?:
      | {
          /**
           * Detail label (e.g., 'Daily Limit (e.g., 5%):')
           */
          label: string;
          /**
           * Detail description
           */
          description: string;
          id?: string | null;
        }[]
      | null;
    icon: 'trophy' | 'check-circle' | 'shield' | 'target';
    iconColor: 'emerald' | 'orange' | 'blue' | 'purple';
    id?: string | null;
  }[];
  evaluationTypes: {
    /**
     * Section title
     */
    title: string;
    /**
     * Section description
     */
    description: string;
    /**
     * Evaluation type cards
     */
    types: {
      /**
       * Evaluation type title
       */
      title: string;
      /**
       * Evaluation type description
       */
      description: string;
      icon: 'zap' | 'crown' | 'clock' | 'star';
      iconColor: 'rose' | 'yellow' | 'lime' | 'blue';
      gradientPosition: 'top-right' | 'top-center' | 'top-left';
      id?: string | null;
    }[];
  };
  roadmap: {
    /**
     * Section title
     */
    title: string;
    /**
     * Part of title to highlight with gradient
     */
    titleHighlight: string;
    /**
     * Roadmap steps
     */
    steps: {
      /**
       * Step number (e.g., '1', '2')
       */
      number: string;
      /**
       * Step title
       */
      title: string;
      /**
       * Step description
       */
      description: string;
      icon: 'star' | 'dollar-sign' | 'check-circle' | 'crown' | 'zap' | 'trophy';
      id?: string | null;
    }[];
  };
  /**
   * Additional information cards (Try Again, Free Reset, etc.)
   */
  additionalInfo: {
    /**
     * Card title
     */
    title: string;
    /**
     * Card description
     */
    description: string;
    icon: 'clock' | 'dollar-sign' | 'gift' | 'refresh';
    iconColor: 'blue' | 'yellow' | 'green' | 'orange';
    id?: string | null;
  }[];
  cta: {
    /**
     * CTA section title
     */
    title: string;
    /**
     * Part of title to highlight with gradient
     */
    titleHighlight: string;
    /**
     * CTA description
     */
    description: string;
    /**
     * CTA button text
     */
    buttonText: string;
    /**
     * CTA button URL
     */
    buttonUrl: string;
  };
  seo?: {
    /**
     * SEO title (defaults to page title if not set)
     */
    title?: string | null;
    /**
     * SEO meta description
     */
    description?: string | null;
    /**
     * SEO keywords (comma-separated)
     */
    keywords?: string | null;
    /**
     * Open Graph image for social sharing (1200x630)
     */
    ogImage?: (number | null) | Media;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "affiliates".
 */
export interface Affiliate {
  id: number;
  header: {
    /**
     * Main page title (supports line breaks)
     */
    title: string;
    /**
     * Part of title to highlight with gradient
     */
    titleHighlight: string;
    /**
     * Subtitle/description below main title
     */
    description: string;
  };
  ctaButtons: {
    primaryButton: {
      /**
       * Primary button text
       */
      text: string;
      /**
       * Primary button URL
       */
      url: string;
    };
    secondaryButton: {
      /**
       * Secondary button text
       */
      text: string;
      /**
       * Secondary button URL
       */
      url: string;
    };
  };
  /**
   * Commission benefit cards displayed in grid layout
   */
  commissionCards: {
    /**
     * Card main title (e.g., 'Upto 22.5%')
     */
    title: string;
    /**
     * Card subtitle (e.g., 'Commission')
     */
    subtitle: string;
    /**
     * Card description text
     */
    description: string;
    icon: 'dollar-sign' | 'gift' | 'tag' | 'trophy' | 'target' | 'zap' | 'users' | 'trending-up';
    iconColor: 'emerald' | 'orange' | 'cyan' | 'blue' | 'purple' | 'rose' | 'yellow' | 'green';
    gradientPosition: 'top-left' | 'top-center' | 'top-right';
    id?: string | null;
  }[];
  bottomSection: {
    /**
     * Bottom section title
     */
    title: string;
    /**
     * Bottom section description
     */
    description: string;
  };
  /**
   * Optional additional feature cards or benefits
   */
  additionalFeatures?:
    | {
        /**
         * Feature title
         */
        title: string;
        /**
         * Feature description
         */
        description: string;
        icon: 'shield' | 'clock' | 'users' | 'chart' | 'globe' | 'star';
        iconColor: 'blue' | 'green' | 'purple' | 'orange' | 'red' | 'yellow';
        id?: string | null;
      }[]
    | null;
  seo?: {
    /**
     * SEO title (defaults to page title if not set)
     */
    title?: string | null;
    /**
     * SEO meta description
     */
    description?: string | null;
    /**
     * SEO keywords (comma-separated)
     */
    keywords?: string | null;
    /**
     * Open Graph image for social sharing (1200x630)
     */
    ogImage?: (number | null) | Media;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "trading-updates".
 */
export interface TradingUpdate {
  id: number;
  /**
   * Main title for the holidays/market hours section
   */
  holidayTitle: string;
  /**
   * Description text above the schedule table
   */
  holidayDescription?: string | null;
  /**
   * Optional description below the table
   */
  holidayFooter?: string | null;
  /**
   * Schedule matrix configuration
   */
  scheduleMatrix?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Title for the platform updates section
   */
  platformTitle: string;
  /**
   * Rich text content for platform updates
   */
  platformContent?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Title for the instrument updates section
   */
  instrumentTitle: string;
  /**
   * Description text above the crypto grid
   */
  instrumentDescription?: string | null;
  /**
   * Optional description below the crypto grid
   */
  instrumentFooter?: string | null;
  /**
   * Crypto instruments to display in the grid
   */
  cryptoItems: {
    /**
     * Crypto symbol (e.g., 'AAVEUSD', 'BTCUSD')
     */
    symbol: string;
    /**
     * Optional text to display in the icon area
     */
    iconText?: string | null;
    /**
     * Gradient style for the crypto icon
     */
    gradientStyle: 'purple-blue' | 'orange-red' | 'green-teal' | 'custom';
    /**
     * Custom gradient CSS (e.g., 'linear-gradient(135deg, #ff6b6b, #4ecdc4)')
     */
    customGradient?: string | null;
    /**
     * Mark as new instrument
     */
    isNewInstrument?: boolean | null;
    /**
     * Mark as updated instrument
     */
    isUpdated?: boolean | null;
    /**
     * Display order (auto-generated if not specified)
     */
    displayOrder?: number | null;
    id?: string | null;
  }[];
  seo?: {
    /**
     * SEO title for the trading updates page
     */
    title?: string | null;
    /**
     * SEO description for the trading updates page
     */
    description?: string | null;
    /**
     * SEO keywords (comma-separated)
     */
    keywords?: string | null;
    /**
     * Open Graph image for social sharing
     */
    ogImage?: (number | null) | Media;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "banners".
 */
export interface Banner {
  id: number;
  /**
   * Configuration for the banner at the top of the site (marquee or fade)
   */
  headerMarquee: {
    /**
     * Enable or disable the header banner
     */
    enabled?: boolean | null;
    /**
     * Choose how the banner images are displayed
     */
    viewType?: ('marquee' | 'fade') | null;
    /**
     * Background color theme for the marquee
     */
    backgroundColor?: ('indigo' | 'blue' | 'purple' | 'green' | 'red' | 'black') | null;
    /**
     * Animation speed - applies to marquee scrolling or fade rotation
     */
    speed?: ('slow' | 'normal' | 'fast') | null;
    /**
     * Images to display in the marquee banner
     */
    images: {
      /**
       * Banner image (recommended height: 64px)
       */
      image: number | Media;
      /**
       * Optional: clicking the banner opens this URL
       */
      url?: string | null;
      openInNewTab?: boolean | null;
      nofollow?: boolean | null;
      status?: ('active' | 'passive') | null;
      visibleFrom?: string | null;
      visibleUntil?: string | null;
      id?: string | null;
    }[];
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * Automatically generated mappings between programs, tiers, and platforms. Fill in Product ID and Variation ID for each combination.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "program-product-mappings".
 */
export interface ProgramProductMapping {
  id: number;
  /**
   * Map program pricing tiers to e-commerce product/variation IDs for each platform.
   */
  mappings?:
    | {
        /**
         * Auto-populated from active programs
         */
        program: number | Program;
        /**
         * Auto-populated from program pricing tiers
         */
        tierId: string;
        /**
         * Auto-populated from platforms
         */
        platformId: string;
        displayName?: string | null;
        productId?: string | null;
        variationId?: string | null;
        reset_fee_product_id?: string | null;
        reset_fee_funded_product_id?: string | null;
        reset_fee_funded_variation_id?: string | null;
        activation_product_id?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "commerce-config".
 */
export interface CommerceConfig {
  id: number;
  /**
   * Countries excluded from purchasing (ISO 3166-1 alpha-2 codes, e.g., 'us', 'tr').
   */
  excludedCountries?:
    | {
        /**
         * 2-letter lowercase country code (e.g., 'us', 'tr').
         */
        code: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Countries banned from usage entirely (ISO 3166-1 alpha-2 codes, e.g., 'ir', 'kp').
   */
  bannedCountries?:
    | {
        /**
         * 2-letter lowercase country code (e.g., 'ir', 'kp').
         */
        code: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Enable Paytiko payment method
   */
  isPaytikoEnabled?: boolean | null;
  /**
   * Enable Confirmo payment method
   */
  isConfirmoEnabled?: boolean | null;
  /**
   * Enable Bridger payment method
   */
  isBridgerEnabled?: boolean | null;
  /**
   * Default payment method
   */
  defaultPaymentMethod?: ('confirmo' | 'paytiko' | 'bridger') | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "policies".
 */
export interface Policy {
  id: number;
  termsOfService?: {
    title?: string | null;
    content?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    seo?: {
      title?: string | null;
      description?: string | null;
      keywords?: string | null;
      ogImage?: (number | null) | Media;
    };
  };
  affiliatePolicy?: {
    title?: string | null;
    content?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    seo?: {
      title?: string | null;
      description?: string | null;
      keywords?: string | null;
      ogImage?: (number | null) | Media;
    };
  };
  privacyPolicy?: {
    title?: string | null;
    content?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    seo?: {
      title?: string | null;
      description?: string | null;
      keywords?: string | null;
      ogImage?: (number | null) | Media;
    };
  };
  refundPolicy?: {
    title?: string | null;
    content?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    seo?: {
      title?: string | null;
      description?: string | null;
      keywords?: string | null;
      ogImage?: (number | null) | Media;
    };
  };
  cookiePolicy?: {
    title?: string | null;
    content?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    seo?: {
      title?: string | null;
      description?: string | null;
      keywords?: string | null;
      ogImage?: (number | null) | Media;
    };
  };
  amlPolicy?: {
    title?: string | null;
    content?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    seo?: {
      title?: string | null;
      description?: string | null;
      keywords?: string | null;
      ogImage?: (number | null) | Media;
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tools".
 */
export interface Tool {
  id: number;
  /**
   * Configure the tools shown on the Tools page. Each tool renders an iframe.
   */
  tools?:
    | {
        enabled?: boolean | null;
        id: string | null;
        icon?: ('Calculator' | 'TrendingUp' | 'DollarSign' | 'BarChart3') | null;
        name: string;
        description?: string | null;
        /**
         * The iframe URL for this tool.
         */
        url: string;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cookie-consent".
 */
export interface CookieConsent {
  id: number;
  /**
   * Toggle cookie consent popup on/off
   */
  enabled?: boolean | null;
  /**
   * Main message displayed in the cookie consent popup
   */
  message: string;
  acceptButtonText: string;
  denyButtonText: string;
  cookiePolicyLinkText: string;
  privacyPolicyLinkText: string;
  /**
   * URL to the cookie policy page (e.g., /cookie-policy)
   */
  cookiePolicyUrl: string;
  /**
   * URL to the privacy policy page
   */
  privacyPolicyUrl: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "global-seo_select".
 */
export interface GlobalSeoSelect<T extends boolean = true> {
  defaults?:
    | T
    | {
        siteName?: T;
        titleTemplate?: T;
        description?: T;
        keywords?: T;
        ogImage?: T;
        twitterHandle?: T;
        canonicalBaseUrl?: T;
        defaultRobots?:
          | T
          | {
              index?: T;
              follow?: T;
            };
        organizationSchema?: T;
      };
  homePage?:
    | T
    | {
        enabled?: T;
        title?: T;
        description?: T;
        keywords?: T;
        ogImage?: T;
        canonicalUrl?: T;
        robots?:
          | T
          | {
              index?: T;
              follow?: T;
            };
        jsonLdSchema?: T;
      };
  programsPage?:
    | T
    | {
        enabled?: T;
        title?: T;
        description?: T;
        keywords?: T;
        ogImage?: T;
        canonicalUrl?: T;
        robots?:
          | T
          | {
              index?: T;
              follow?: T;
            };
        jsonLdSchema?: T;
      };
  blogPage?:
    | T
    | {
        enabled?: T;
        title?: T;
        description?: T;
        keywords?: T;
        ogImage?: T;
        canonicalUrl?: T;
        robots?:
          | T
          | {
              index?: T;
              follow?: T;
            };
        jsonLdSchema?: T;
      };
  faqPage?:
    | T
    | {
        enabled?: T;
        title?: T;
        description?: T;
        keywords?: T;
        ogImage?: T;
        canonicalUrl?: T;
        robots?:
          | T
          | {
              index?: T;
              follow?: T;
            };
        jsonLdSchema?: T;
      };
  oneStepPage?:
    | T
    | {
        enabled?: T;
        title?: T;
        description?: T;
        keywords?: T;
        ogImage?: T;
        canonicalUrl?: T;
        robots?:
          | T
          | {
              index?: T;
              follow?: T;
            };
        jsonLdSchema?: T;
      };
  twoStepPage?:
    | T
    | {
        enabled?: T;
        title?: T;
        description?: T;
        keywords?: T;
        ogImage?: T;
        canonicalUrl?: T;
        robots?:
          | T
          | {
              index?: T;
              follow?: T;
            };
        jsonLdSchema?: T;
      };
  howItWorksPage?:
    | T
    | {
        enabled?: T;
        title?: T;
        description?: T;
        keywords?: T;
        ogImage?: T;
        canonicalUrl?: T;
        robots?:
          | T
          | {
              index?: T;
              follow?: T;
            };
        jsonLdSchema?: T;
      };
  affiliatesPage?:
    | T
    | {
        enabled?: T;
        title?: T;
        description?: T;
        keywords?: T;
        ogImage?: T;
        canonicalUrl?: T;
        robots?:
          | T
          | {
              index?: T;
              follow?: T;
            };
        jsonLdSchema?: T;
      };
  instantPage?:
    | T
    | {
        enabled?: T;
        title?: T;
        description?: T;
        keywords?: T;
        ogImage?: T;
        canonicalUrl?: T;
        robots?:
          | T
          | {
              index?: T;
              follow?: T;
            };
        jsonLdSchema?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepage_select".
 */
export interface HomepageSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        tagline?: T;
        headline?: T;
        highlightedText?: T;
        secondaryHighlight?: T;
        primaryButtonText?: T;
        primaryButtonUrl?: T;
        secondaryButtonText?: T;
        secondaryButtonUrl?: T;
      };
  features?:
    | T
    | {
        text?: T;
        icon?: T;
        iconColor?: T;
        id?: T;
      };
  featuredIn?:
    | T
    | {
        heading?: T;
        logos?:
          | T
          | {
              name?: T;
              logo?: T;
              url?: T;
              id?: T;
            };
      };
  advantages?:
    | T
    | {
        dividerTitle?: T;
        title?: T;
        titleHighlight?: T;
        description?: T;
        cards?:
          | T
          | {
              title?: T;
              description?: T;
              icon?: T;
              iconColor?: T;
              gradientPosition?: T;
              id?: T;
            };
      };
  payoutsFeatures?:
    | T
    | {
        dividerTitle?: T;
        title?: T;
        titleHighlight?: T;
        description?: T;
        features?:
          | T
          | {
              title?: T;
              description?: T;
              position?: T;
              id?: T;
            };
      };
  highestPayouts?:
    | T
    | {
        title?: T;
        titleHighlight?: T;
        description?: T;
      };
  tradingFeatures?:
    | T
    | {
        dividerTitle?: T;
        title?: T;
        titleHighlight?: T;
        description?: T;
        features?:
          | T
          | {
              title?: T;
              description?: T;
              layout?: T;
              id?: T;
            };
      };
  videoTestimonials?:
    | T
    | {
        dividerTitle?: T;
        title?: T;
        titleHighlight?: T;
        description?: T;
      };
  testimonials?:
    | T
    | {
        title?: T;
        titleHighlight?: T;
        description?: T;
      };
  faq?:
    | T
    | {
        dividerTitle?: T;
        title?: T;
        titleHighlight?: T;
        description?: T;
        faqs?:
          | T
          | {
              question?: T;
              answer?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "how-it-works_select".
 */
export interface HowItWorksSelect<T extends boolean = true> {
  header?:
    | T
    | {
        title?: T;
        titleHighlight?: T;
        description?: T;
      };
  propTradingSection?:
    | T
    | {
        title?: T;
        description?: T;
      };
  keyConcepts?:
    | T
    | {
        title?: T;
        description?: T;
        details?:
          | T
          | {
              label?: T;
              description?: T;
              id?: T;
            };
        icon?: T;
        iconColor?: T;
        id?: T;
      };
  evaluationTypes?:
    | T
    | {
        title?: T;
        description?: T;
        types?:
          | T
          | {
              title?: T;
              description?: T;
              icon?: T;
              iconColor?: T;
              gradientPosition?: T;
              id?: T;
            };
      };
  roadmap?:
    | T
    | {
        title?: T;
        titleHighlight?: T;
        steps?:
          | T
          | {
              number?: T;
              title?: T;
              description?: T;
              icon?: T;
              id?: T;
            };
      };
  additionalInfo?:
    | T
    | {
        title?: T;
        description?: T;
        icon?: T;
        iconColor?: T;
        id?: T;
      };
  cta?:
    | T
    | {
        title?: T;
        titleHighlight?: T;
        description?: T;
        buttonText?: T;
        buttonUrl?: T;
      };
  seo?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
        ogImage?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "affiliates_select".
 */
export interface AffiliatesSelect<T extends boolean = true> {
  header?:
    | T
    | {
        title?: T;
        titleHighlight?: T;
        description?: T;
      };
  ctaButtons?:
    | T
    | {
        primaryButton?:
          | T
          | {
              text?: T;
              url?: T;
            };
        secondaryButton?:
          | T
          | {
              text?: T;
              url?: T;
            };
      };
  commissionCards?:
    | T
    | {
        title?: T;
        subtitle?: T;
        description?: T;
        icon?: T;
        iconColor?: T;
        gradientPosition?: T;
        id?: T;
      };
  bottomSection?:
    | T
    | {
        title?: T;
        description?: T;
      };
  additionalFeatures?:
    | T
    | {
        title?: T;
        description?: T;
        icon?: T;
        iconColor?: T;
        id?: T;
      };
  seo?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
        ogImage?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "trading-updates_select".
 */
export interface TradingUpdatesSelect<T extends boolean = true> {
  holidayTitle?: T;
  holidayDescription?: T;
  holidayFooter?: T;
  scheduleMatrix?: T;
  platformTitle?: T;
  platformContent?: T;
  instrumentTitle?: T;
  instrumentDescription?: T;
  instrumentFooter?: T;
  cryptoItems?:
    | T
    | {
        symbol?: T;
        iconText?: T;
        gradientStyle?: T;
        customGradient?: T;
        isNewInstrument?: T;
        isUpdated?: T;
        displayOrder?: T;
        id?: T;
      };
  seo?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
        ogImage?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "banners_select".
 */
export interface BannersSelect<T extends boolean = true> {
  headerMarquee?:
    | T
    | {
        enabled?: T;
        viewType?: T;
        backgroundColor?: T;
        speed?: T;
        images?:
          | T
          | {
              image?: T;
              url?: T;
              openInNewTab?: T;
              nofollow?: T;
              status?: T;
              visibleFrom?: T;
              visibleUntil?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "program-product-mappings_select".
 */
export interface ProgramProductMappingsSelect<T extends boolean = true> {
  mappings?:
    | T
    | {
        program?: T;
        tierId?: T;
        platformId?: T;
        displayName?: T;
        productId?: T;
        variationId?: T;
        reset_fee_product_id?: T;
        reset_fee_funded_product_id?: T;
        reset_fee_funded_variation_id?: T;
        activation_product_id?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "commerce-config_select".
 */
export interface CommerceConfigSelect<T extends boolean = true> {
  excludedCountries?:
    | T
    | {
        code?: T;
        id?: T;
      };
  bannedCountries?:
    | T
    | {
        code?: T;
        id?: T;
      };
  isPaytikoEnabled?: T;
  isConfirmoEnabled?: T;
  isBridgerEnabled?: T;
  defaultPaymentMethod?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "policies_select".
 */
export interface PoliciesSelect<T extends boolean = true> {
  termsOfService?:
    | T
    | {
        title?: T;
        content?: T;
        seo?:
          | T
          | {
              title?: T;
              description?: T;
              keywords?: T;
              ogImage?: T;
            };
      };
  affiliatePolicy?:
    | T
    | {
        title?: T;
        content?: T;
        seo?:
          | T
          | {
              title?: T;
              description?: T;
              keywords?: T;
              ogImage?: T;
            };
      };
  privacyPolicy?:
    | T
    | {
        title?: T;
        content?: T;
        seo?:
          | T
          | {
              title?: T;
              description?: T;
              keywords?: T;
              ogImage?: T;
            };
      };
  refundPolicy?:
    | T
    | {
        title?: T;
        content?: T;
        seo?:
          | T
          | {
              title?: T;
              description?: T;
              keywords?: T;
              ogImage?: T;
            };
      };
  cookiePolicy?:
    | T
    | {
        title?: T;
        content?: T;
        seo?:
          | T
          | {
              title?: T;
              description?: T;
              keywords?: T;
              ogImage?: T;
            };
      };
  amlPolicy?:
    | T
    | {
        title?: T;
        content?: T;
        seo?:
          | T
          | {
              title?: T;
              description?: T;
              keywords?: T;
              ogImage?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tools_select".
 */
export interface ToolsSelect<T extends boolean = true> {
  tools?:
    | T
    | {
        enabled?: T;
        id?: T;
        icon?: T;
        name?: T;
        description?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cookie-consent_select".
 */
export interface CookieConsentSelect<T extends boolean = true> {
  enabled?: T;
  message?: T;
  acceptButtonText?: T;
  denyButtonText?: T;
  cookiePolicyLinkText?: T;
  privacyPolicyLinkText?: T;
  cookiePolicyUrl?: T;
  privacyPolicyUrl?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskCreateCollectionExport".
 */
export interface TaskCreateCollectionExport {
  input: {
    name?: string | null;
    format?: ('csv' | 'json') | null;
    limit?: number | null;
    page?: number | null;
    sort?: string | null;
    sortOrder?: ('asc' | 'desc') | null;
    locale?: ('all' | 'en' | 'tr' | 'de' | 'ar' | 'ms' | 'es') | null;
    drafts?: ('yes' | 'no') | null;
    selectionToUse?: ('currentSelection' | 'currentFilters' | 'all') | null;
    fields?: string[] | null;
    collectionSlug: string;
    where?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
    user?: string | null;
    userCollection?: string | null;
    exportsCollection?: string | null;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "YouTubeBlock".
 */
export interface YouTubeBlock {
  /**
   * Paste the full YouTube URL (e.g., https://www.youtube.com/watch?v=dQw4w9WgXcQ)
   */
  url: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'youtube';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}
